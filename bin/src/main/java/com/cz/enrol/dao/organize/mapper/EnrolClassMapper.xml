<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cz.enrol.dao.organize.EnrolClassMapper">

	<!--实体映射 -->
	<resultMap id="EnrolClassResultMapResultMap" type="com.apicloud.server.entity.enrol.EnrolClass">
		<!--主键 -->
		<id property="id" column="主键" />
		<!--班级名称 -->
		<result property="name" column="name" />
		<!--校区Id，对应表enrol_campus关键字Id -->
		<result property="campusId" column="campus_id" />
		<!--品牌Id -->
		<result property="brandCode" column="brand_code" />
		<!--营销Id -->
		<result property="marketingId" column="marketing_id" />
		<!--期数 -->
		<result property="periods" column="periods" />
		<!--教学方式Id -->
		<result property="teachModeCode" column="teach_mode_code" />
		<!--学科Id -->
		<result property="subjectId" column="subject_id" />
		<!--课程类型Id -->
		<result property="classTypeCode" column="class_type_code" />
		<!--开班时间 -->
		<result property="startDate" column="start_date" />
		<!---->
		<result property="endDate" column="end_date" />
		<!-- 课时 -->
		<result property="classTime" column="class_time" />
		<!--计划招生数量 -->
		<result property="plan" column="plan" />
		<!--实际招生数量 -->
		<result property="current" column="current" />
		<!--学费 -->
		<result property="discountPrice" column="discount_price" />
		<!--班主任Id，对应enrol_user表关键字Id； -->
		<result property="userId" column="user_id" />
		<!--班主任名称 -->
		<result property="userName" column="user_name" />
		<!--备注 -->
		<result property="memo" column="memo" />
		<!--创建者 -->
		<result property="creator" column="creator" />
		<!--创建时间 -->
		<result property="createTime" column="create_time" />
		<!--编辑者 -->
		<result property="editor" column="editor" />
		<!--编辑时间 -->
		<result property="editTime" column="edit_time" />
		<!--班级介绍； -->
		<result property="introduce" column="introduce" />
		<!--状态(0:停用,1:启用) -->
		<result property="status" column="status" />
	</resultMap>


	<!-- 通用查询结果列 -->
	<sql id="Base_Column_List">
		id, name, campus_id, brand_code, marketing_id, periods,
		teach_mode_code,
		subject_id, class_type_code, start_date,
		end_date,class_time, plan,
		current, discount_price, user_id, user_name,
		memo, creator, create_time,
		editor, edit_time, introduce, status
	</sql>

	<!-- 查询（根据主键ID查询） -->
	<select id="selectByPrimaryKey" resultType="com.apicloud.server.entity.enrol.EnrolClass"
		parameterType="java.lang.Long">
		SELECT
		<include refid="Base_Column_List" />
		FROM enrol_class
		WHERE id = #{id}
	</select>

	<!--删除：根据主键ID删除 -->
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		DELETE FROM
		enrol_class
		WHERE id = #{id}
	</delete>

	<!-- 添加 -->
	<insert id="insert" parameterType="com.apicloud.server.entity.enrol.EnrolClass">
		INSERT INTO enrol_class
		(id,name,campus_id,brand_code,marketing_id,periods,teach_mode_code,subject_id,class_type_code,start_date,end_date,class_time,plan,current,discount_price,user_id,user_name,memo,creator,create_time,editor,edit_time,introduce,status)
		VALUES
		(#{id},#{name},#{campusId},#{brandCode},#{marketingId},#{periods},#{teachModeCode},#{subjectId},#{classTypeCode},#{startDate},#{endDate},#{classTime},#{plan},#{current},#{discountPrice},#{userId},#{userName},#{memo},#{creator},#{createTime},#{editor},#{editTime},#{introduce},#{status})
	</insert>

	<!-- 添加 （匹配有值的字段） -->
	<insert id="insertSelective" parameterType="com.apicloud.server.entity.enrol.EnrolClass">
		INSERT INTO enrol_class
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="campusId != null">
				campus_id,
			</if>
			<if test="brandCode != null">
				brand_code,
			</if>
			<if test="marketingId != null">
				marketing_id,
			</if>
			<if test="periods != null">
				periods,
			</if>
			<if test="teachModeCode != null">
				teach_mode_code,
			</if>
			<if test="subjectId != null">
				subject_id,
			</if>
			<if test="classTypeCode != null">
				class_type_code,
			</if>
			<if test="startDate != null">
				start_date,
			</if>
			<if test="endDate != null">
				end_date,
			</if>
			<if test="classTime != null">
				class_time,
			</if>
			<if test="plan != null">
				plan,
			</if>
			<if test="current != null">
				current,
			</if>
			<if test="discountPrice != null">
				discount_price,
			</if>
			<if test="userId != null">
				user_id,
			</if>
			<if test="userName != null">
				user_name,
			</if>
			<if test="memo != null">
				memo,
			</if>
			<if test="creator != null">
				creator,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="editor != null">
				editor,
			</if>
			<if test="editTime != null">
				edit_time,
			</if>
			<if test="introduce != null">
				introduce,
			</if>
			<if test="status != null">
				status,
			</if>

		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id!=null">
				#{id},
			</if>
			<if test="name!=null">
				#{name},
			</if>
			<if test="campusId!=null">
				#{campusId},
			</if>
			<if test="brandCode!=null">
				#{brandCode},
			</if>
			<if test="marketingId!=null">
				#{marketingId},
			</if>
			<if test="periods!=null">
				#{periods},
			</if>
			<if test="teachModeCode!=null">
				#{teachModeCode},
			</if>
			<if test="subjectId!=null">
				#{subjectId},
			</if>
			<if test="classTypeCode!=null">
				#{classTypeCode},
			</if>
			<if test="startDate!=null">
				#{startDate},
			</if>
			<if test="endDate!=null">
				#{endDate},
			</if>
			<if test="classTime!=null">
				#{classTime},
			</if>
			<if test="plan!=null">
				#{plan},
			</if>
			<if test="current!=null">
				#{current},
			</if>
			<if test="discountPrice!=null">
				#{discountPrice},
			</if>
			<if test="userId!=null">
				#{userId},
			</if>
			<if test="userName!=null">
				#{userName},
			</if>
			<if test="memo!=null">
				#{memo},
			</if>
			<if test="creator!=null">
				#{creator},
			</if>
			<if test="createTime!=null">
				#{createTime},
			</if>
			<if test="editor!=null">
				#{editor},
			</if>
			<if test="editTime!=null">
				#{editTime},
			</if>
			<if test="introduce!=null">
				#{introduce},
			</if>
			<if test="status!=null">
				#{status},
			</if>
		</trim>
	</insert>

	<!-- 修 改 -->
	<update id="updateByPrimaryKeySelective" parameterType="com.apicloud.server.entity.enrol.EnrolClass">
		UPDATE enrol_class
		<set>
			<if test="name != null">
				name = #{name},
			</if>
			<if test="campusId != null">
				campus_id = #{campusId},
			</if>
			<if test="brandCode != null">
				brand_code = #{brandCode},
			</if>
			<if test="marketingId != null">
				marketing_id = #{marketingId},
			</if>
			<if test="periods != null">
				periods = #{periods},
			</if>
			<if test="teachModeCode != null">
				teach_mode_code = #{teachModeCode},
			</if>
			<if test="subjectId != null">
				subject_id = #{subjectId},
			</if>
			<if test="classTypeCode != null">
				class_type_code = #{classTypeCode},
			</if>
			<if test="startDate != null">
				start_date = #{startDate},
			</if>
			<if test="endDate != null">
				end_date = #{endDate},
			</if>
			<if test="classTime != null">
				class_time = #{classTime},
			</if>
			<if test="plan != null">
				plan = #{plan},
			</if>
			<if test="current != null">
				current = #{current},
			</if>
			<if test="discountPrice != null">
				discount_price = #{discountPrice},
			</if>
			<if test="userId != null">
				user_id = #{userId},
			</if>
			<if test="userName != null">
				user_name = #{userName},
			</if>
			<if test="memo != null">
				memo = #{memo},
			</if>
			<if test="creator != null">
				creator = #{creator},
			</if>
			<if test="createTime != null">
				create_time = #{createTime},
			</if>
			<if test="editor != null">
				editor = #{editor},
			</if>
			<if test="editTime != null">
				edit_time = #{editTime},
			</if>
			<if test="introduce != null">
				introduce = #{introduce},
			</if>
			<if test="status != null">
				status = #{status},
			</if>

		</set>
		WHERE id = #{id}
	</update>

	<!-- 修 改 -->
	<update id="updateByPrimaryKey" parameterType="com.apicloud.server.entity.enrol.EnrolClass">
		UPDATE enrol_class
		SET
		name = #{name},
		campus_id = #{campusId},
		brand_code = #{brandCode},
		marketing_id = #{marketingId},
		periods = #{periods},
		teach_mode_code =
		#{teachModeCode},
		subject_id = #{subjectId},
		class_type_code =
		#{classTypeCode},
		start_date = #{startDate},
		end_date = #{endDate},
		class_time = #{classTime},
		plan = #{plan},
		current = #{current},
		discount_price = #{discountPrice},
		user_id = #{userId},
		user_name =
		#{userName},
		memo = #{memo},
		creator = #{creator},
		create_time =
		#{createTime},
		editor = #{editor},
		edit_time = #{editTime},
		introduce =
		#{introduce},
		status = #{status}
		WHERE id = #{id}
	</update>

	<!-- 根据id列表查询班级列表 -->
	<select id="queryByClassIdList" parameterType="java.util.List"
		resultMap="EnrolClassResultMapResultMap">
		select
		<include refid="Base_Column_List" />
		from enrol_class
		where status = 1 and id in
		<foreach collection="list" index="index" item="item" open="("
			separator="," close=")">
			#{item}
		</foreach>
	</select>

	<!-- 根据学科id查询班级列表 -->
	<select id="quereyBySubjectId" parameterType="java.lang.Long"
		resultMap="EnrolClassResultMapResultMap">
		select
		<include refid="Base_Column_List" />
		from enrol_class
		where subject_id = #{subjectId} and status = 1 and
		start_date > now() ORDER
		BY start_date;
	</select>

	<!-- 根据班级id查询班级信息，包含校区信息 -->
	<select id="selectByClassId" parameterType="java.lang.Long"
		resultType="java.util.Map">
		SELECT
		cla.id AS classId,
		cla.`name` AS className,
		cla.teach_mode_code AS teachModeCode,
		cla.teach_mode_name AS teachModeName,
		cla.periods AS periods,
		cla.subject_id AS subjectId,
		sub.`name` AS subjectName,
		cla.class_type_code AS classTypeCode,
		cla.class_type_name AS classTypeName,
		cla.discount_price AS discountPrice,
		cla.start_date AS startDate,
		cla.class_time AS classTime,
		cla.plan AS planStudent,
		cla.current AS currentStudent,
		cam.id AS campusId,
		cam.`name` AS campusName,
		cam.address AS address,
		cam.introduce AS introduce
		FROM enrol_class cla 
		LEFT JOIN enrol_campus cam ON cla.campus_id=cam.id
		LEFT JOIN enrol_subject sub On cla.subject_id=sub.id
		WHERE cla.id=#{classId};
	</select>
</mapper>