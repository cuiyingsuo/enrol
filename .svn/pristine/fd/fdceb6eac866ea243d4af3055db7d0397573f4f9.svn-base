package com.cz.enrol.controller;

import com.cz.enrol.common.BaseBody;
import com.cz.enrol.common.ReturnStatus;
import com.cz.enrol.entity.Banner;
import com.cz.enrol.service.BannerService;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.util.List;

/**
 * 
 * banner表 访问控制器类
 * 
 **/
@RestController
@RequestMapping("/bannerController")
public class BannerController {

	@Autowired
	private BannerService bannerService;

	/**
	 * 查询banner信息
	 * 
	 * @param id
	 * @return
	 */
	@RequestMapping(value = "/getBannerInfo", method = RequestMethod.GET)
	public BaseBody<Banner> getBannerInfo(@RequestParam Long id) {
		BaseBody<Banner> baseBody = new BaseBody<Banner>();

		Banner banner = bannerService.queryByPrimaryKey(id);
		if (null != banner) {
			baseBody.setSuccess(ReturnStatus.SUCCESS);
			baseBody.setCode(200);
			baseBody.setContent(banner);
			baseBody.setMessage("查询成功");
		} else {
			baseBody.setSuccess(ReturnStatus.FAILD);
			baseBody.setCode(500);
			baseBody.setMessage("查询无记录");
		}
		return baseBody;
	}

	/**
	 * 查询banner列表
	 *
	 * @return
	 */
	@RequestMapping(value = "/getBannerList", method = RequestMethod.GET)
	public BaseBody<List> getBannerList() {
		BaseBody<List> baseBody = new BaseBody<List>();

		List<Banner> bannerList = bannerService.queryBannerList();
		if (bannerList.size() > 0) {
			baseBody.setSuccess(ReturnStatus.SUCCESS);
			baseBody.setCode(200);
			baseBody.setContent(bannerList);
			baseBody.setMessage("查询成功");
		} else {
			baseBody.setSuccess(ReturnStatus.FAILD);
			baseBody.setCode(500);
			baseBody.setMessage("查询无记录");
		}
		return baseBody;
	}
}
