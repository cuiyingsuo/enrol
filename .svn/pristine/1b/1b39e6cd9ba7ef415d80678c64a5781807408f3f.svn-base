package com.cz.enrol.service;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.mybatis.spring.SqlSessionTemplate;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.cz.enrol.dao.goods.GoodsMapper;
import com.cz.enrol.dao.marketing.MarketingMapper;
import com.cz.enrol.dao.order.OrderMainMapper;
import com.cz.enrol.dao.order.OrderSubMapper;
import com.cz.enrol.dao.organize.ClassMapper;
import com.cz.enrol.entity.Goods;
import com.cz.enrol.entity.OrderMain;
import com.cz.enrol.entity.OrderSub;
import com.cz.enrol.utils.GenerateSequenceUtil;

/**
 * 
 * 订单信息表（主表）； 服务类
 * 
 **/
@Service
public class OrderMainService {

	// 统一记录日志类
	private Logger log = LoggerFactory.getLogger("enrol");
	@Autowired
	private SqlSessionTemplate session;

	@Autowired
	private OrderMainMapper orderMainDao;
	
	@Autowired
	private OrderSubMapper orderSubDao;
	
	@Autowired
	private GoodsMapper goodsDao;
	
	@Autowired
	private ClassMapper classDao;
	
	@Autowired
	private MarketingMapper marketingDao;
	
	public List<Map<String,Object>> queryOrderByStudentId(Long studentId) {
		return orderMainDao.queryOrderByStudentId(studentId);
	}
	
	public List<Map<String,Object>> querySubOrderByMergeOrderNo(Long orderNo){
		List<Map<String,Object>> subOrderList = orderSubDao.selectByMergeOrderNo(orderNo);
		return subOrderList;
	}
	public Map<String, Object> confirmMainOrder(Long classId, Long goodsId) {
		

		Goods goods = goodsDao.selectByPrimaryKey(goodsId);
		// 查询班级信息包含校区信息
		Map<String, Object> enrolClass = classDao.selectByClassId(classId);
		Map<String, Object> marketing = marketingDao.selectByClassId(classId);

		Map<String, Object> relMap = new HashMap<String, Object>();
		relMap.put("goodsName", goods.getName());
		relMap.put("goodsPrice", goods.getPrice());

		if (null != enrolClass) {
			relMap.put("discountPrice", enrolClass.get("discountPrice"));
			relMap.put("address", enrolClass.get("address"));
			relMap.put("className", enrolClass.get("className"));
			relMap.put("periods", enrolClass.get("periods"));
			relMap.put("teachModeName", enrolClass.get("teachModeName"));
			relMap.put("startDate", enrolClass.get("startDate"));
			relMap.put("classTime", enrolClass.get("classTime"));
			if (null != marketing) {
				relMap.put("strategy", marketing.get("strategy"));
			}
		}
		return relMap;
	}
	@Transactional
	public boolean submitMainOrder(Long studentId,String studentMobile,String studentName,Long goodsId, Long classId, int payType,
			int isReceipt) {

		Goods goods = goodsDao.selectByPrimaryKey(goodsId);
		//查询班级信息包含校区信息
		Map<String, Object> enrolClass = classDao.selectByClassId(classId);
		Map<String, Object> marketing = marketingDao.selectByClassId(classId);
		
		String mergeOrderNo = String.valueOf(GenerateSequenceUtil.generateSequenceNo());
		
		OrderMain orderMain = new OrderMain();
		
		orderMain.setMergeOrderNo(mergeOrderNo);
		orderMain.setOrderPrice(Integer.parseInt(enrolClass.get("discountPrice").toString()));
		orderMain.setCostPrice(goods.getPrice());
		
		orderMain.setStudentId(studentId);
		orderMain.setStudentName(studentName);
		orderMain.setStudentMobile(studentMobile);
		orderMain.setSubjectId(Long.parseLong(enrolClass.get("subjectId").toString()));
		orderMain.setSubjectName(enrolClass.get("subjectName").toString());
		orderMain.setCampusId(Long.parseLong(enrolClass.get("campusId").toString()));
		orderMain.setCampusName(enrolClass.get("campusName").toString());
		orderMain.setClassId(classId);
		orderMain.setGoodsName(enrolClass.get("className").toString());
		orderMain.setClassName(enrolClass.get("className").toString());
		orderMain.setPayType(payType);
		orderMain.setMarketingId(Long.parseLong(marketing.get("marketingId").toString()));
		orderMain.setMarketingName(marketing.get("strategy").toString());
		orderMain.setPayChannelName("");
		orderMain.setPrefAmount(goods.getPrice()-(Integer.parseInt(enrolClass.get("discountPrice").toString())));
		orderMain.setPaid(0);
		orderMain.setStatus(0);
		orderMain.setElecReceipt(isReceipt);
		orderMain.setReceiptUrl("");
		orderMain.setReceiptNo("");
		orderMain.setCreator(studentName);
		orderMain.setCreateTime(System.currentTimeMillis());
		orderMain.setGoodsId(goodsId);
		int result = orderMainDao.insertSelective(orderMain);
		if(result!=0){
			return true;
		}
		return false;
	}
	@Transactional
	public OrderSub makeOrderSubInfo(String mobile,String mergeOrderNo){
		OrderMain orderMain = new OrderMain();
		orderMain.setMergeOrderNo(mergeOrderNo);
		orderMain=orderMainDao.selectOne(orderMain);
		
		log.info("用户{}创建支付订单,支付方式：全款支付",mobile);
		OrderSub orderSub =new OrderSub();
		orderSub.setOrderNo(String.valueOf(GenerateSequenceUtil.generateSequenceNo()));
		orderSub.setOrderPrice(orderMain.getOrderPrice());
		orderSub.setStatus(0);
		orderSub.setMergeOrderNo(mergeOrderNo);
		orderSub.setCreateTime(System.currentTimeMillis());
		orderSub.setCreator(mobile);
		return orderSub;
	}
}
