package com.cz.enrol.controller.management;

import com.cz.enrol.common.BaseBody;
import com.cz.enrol.service.CampusService;
import com.cz.enrol.service.ClassService;
import com.cz.enrol.service.DictService;
import com.cz.enrol.service.SubjectService;
import com.cz.enrol.vo.ClassEx;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * Created by liuzhongshuai on 2017/10/27.
 */
@RestController
@RequestMapping("/managenment")
public class ManagerCommonController {

    @Autowired
    private SubjectService subjectService;
    @Autowired
    private CampusService campusService;
    @Autowired
    private DictService dictService;
    @Autowired
    private ClassService classService;


    /**
     * 初始化通用查询条件
     *
     * @return
     */
    @GetMapping("/common/initrerequisiteInfo")
    public BaseBody<Map> initrerequisiteInfo() {
        BaseBody<Map> baseBody = new BaseBody<Map>();
        //查询学科下拉选
        List subjects = subjectService.querySubjectListByStatus((byte) 1);
        //查询校区
        List campuses = campusService.queryCampusListByStatus((byte) 1);
        //班级类型
        Map classTypes = dictService.getDetailType("class_type");
        //授课模式
        Map teachTypes = dictService.getDetailType("teach_type");
        Map stringListMap = new HashMap<String, List<Map<String, Object>>>(16);

        stringListMap.put("subjectList", subjects);
        stringListMap.put("camputList", campuses);
        stringListMap.put("classType", classTypes.get("class_type"));
        stringListMap.put("teachType", teachTypes.get("teach_type"));
        baseBody.setContent(stringListMap);
        return baseBody;
    }

    /**
     * 级联查询班级信息
     *
     * @param classEx
     * @return
     */
    @GetMapping("/common/queryClassByConditions")
    public BaseBody<List<Map>> queryClassByConditions(ClassEx classEx) {
        BaseBody<List<Map>> baseBody = new BaseBody<List<Map>>();
        List<Map> result = classService.queryClassByMulitField(classEx);
        baseBody.setContent(result);
        return baseBody;
    }


}
