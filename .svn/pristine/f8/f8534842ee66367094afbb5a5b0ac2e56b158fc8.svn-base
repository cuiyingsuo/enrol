package com.cz.enrol.controller;

import java.util.Date;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.cz.enrol.common.DictType;
import com.cz.enrol.entity.Student;
import com.cz.enrol.service.DictService;
import com.cz.enrol.service.StudentService;
import com.cz.enrol.utils.MD5Util;
import com.cz.enrol.utils.RedisUtil;

/**
 * 
 * 学员表 访问控制器类
 * 
 **/
@RestController
@RequestMapping("/studentController")
public class StudentController {

	// 统一记录日志类
	private Logger Log = LoggerFactory.getLogger("enrol");
	@Autowired
	// 当前业务操作接口bo
	private StudentService studentService;
	@Autowired
	private DictService dictService;

	/**
	 * 查询学生信息
	 * 
	 * @param request
	 * @param response
	 * @param modelMap
	 * @return
	 */
	@RequestMapping(value = "/getStudentInfo", method = RequestMethod.GET)
	public String getStudentInfo(@RequestParam String mobile,
                                   HttpServletRequest request, HttpServletResponse response,
                                   ModelMap modelMap) {
		Student studentInfo = studentService.queryStudentByMobile(mobile);
		if (null != studentInfo) {
			modelMap.addAttribute("success", "true");
			modelMap.addAttribute("code", 200);
			modelMap.addAttribute("message", "成功");
			modelMap.addAttribute("studentInfo", studentInfo);
		}
		return "enrol/student/studentInfo";
	}

	/**
	 * 编辑学生信息页面
	 * 
	 * @param request
	 * @param response
	 * @param modelMap
	 * @return
	 */
	@RequestMapping(value = "/getStudentInfoAndChannelList", method = RequestMethod.GET)
	public String editStudentPage(@RequestParam String mobile,
                                  HttpServletRequest request, HttpServletResponse response,
                                  ModelMap modelMap) {
		Student studentInfo = studentService.queryStudentByMobile(mobile);
		List<Map<String, String>> channelList = dictService
				.queryInfoByType(DictType.CHANNEL);
		if (null != studentInfo) {
			modelMap.addAttribute("success", "true");
			modelMap.addAttribute("code", 200);
			modelMap.addAttribute("message", "成功");
			modelMap.addAttribute("studentInfo", studentInfo);
			modelMap.addAttribute("channelList", channelList);
		}
		return "enrol/student/studentEditPage";
	}

	/**
	 * 更新学生信息
	 * 
	 * @param request
	 * @param response
	 * @param modelMap
	 * @return
	 */
	@RequestMapping(value = "/updateStudentInfo", method = RequestMethod.POST)
	public String updateStudentInfo(Student es,
                                    HttpServletRequest request, HttpServletResponse response,
                                    ModelMap modelMap) {
		System.out.println(es.getName());
		if(null==es.getMobile()||"".equals(es.getMobile())){
			modelMap.addAttribute("success", "false");
			modelMap.addAttribute("code", 200);
			modelMap.addAttribute("message", "手机号码必传");
			return "enrol/result";
		}
		int rel = studentService.updateByMobileSelective(es);
		if (rel > 0) {
			modelMap.addAttribute("success", "true");
			modelMap.addAttribute("code", 200);
			modelMap.addAttribute("message", "更新成功");
		}
		return "enrol/result";
	}

	/**
	 * 登录
	 * 
	 * @param mobile
	 *            手机号码
	 * @param password
	 *            密码
	 * @param request
	 * @param response
	 * @param modelMap
	 * @return
	 */
	@RequestMapping(value = "/login", method = RequestMethod.POST)
	public String login(@RequestParam String mobile,
                        @RequestParam String password, HttpServletRequest request,
                        HttpServletResponse response, ModelMap modelMap) {
		String token = request.getHeader("token");
		// 有token值
		if (null != token) {
			// 已登录
			if ( new RedisUtil().hasKey(token)) {
				modelMap.addAttribute("success", "true");
				modelMap.addAttribute("code", 200);
				modelMap.addAttribute("message", "用户已登录");
				Log.debug("用户  {} 已经登录.", mobile);
				return "enrol/result";
			}
		}
		if(new RedisUtil().hasKey(token)){
			new RedisUtil().del(token);
		}
		//token值不存在或登录信息超时
		int status = studentService.checkPassword(mobile, password);
		if (status == 0) {
			modelMap.addAttribute("success", "false");
			modelMap.addAttribute("code", 200);
			modelMap.addAttribute("message", "用户不存在！");
			Log.error("################# 用户  {} 不存在. ##################",
					mobile);
		}
		if (status == 1) {
			modelMap.addAttribute("success", "false");
			modelMap.addAttribute("code", 200);
			modelMap.addAttribute("message", "密码不正确！");
			Log.error("################# 用户  {} 密码不正确. ##################",
					mobile);
		}
		if (status == 2) {
			try {
				token = MD5Util.encryption(mobile + System.currentTimeMillis());
				String tokenValue = mobile;
				new RedisUtil().set(token, tokenValue, 30 * 60);
				modelMap.addAttribute("success", "true");
				modelMap.addAttribute("code", 200);
				modelMap.addAttribute("message", "登录成功");
				modelMap.addAttribute("token", token);
				Log.debug("################# 用户  {} 登录成功. ##################",
						mobile);
			} catch (Exception e) {
				modelMap.addAttribute("success", "false");
				modelMap.addAttribute("code", 200);
				modelMap.addAttribute("message", "服务器走丢了");
				Log.debug("{}------找不到缓存服务器", new Date());
				e.printStackTrace();
			}
		}

		return "enrol/result";
	}

	/**
	 * 检查登录
	 * 
	 *            手机号码
	 * @param request
	 * @param response
	 * @param modelMap
	 * @return
	 */
	@RequestMapping(value = "/checkLogin", method = RequestMethod.POST)
	public String checkLogin(@RequestParam String token,
                             HttpServletRequest request, HttpServletResponse response,
                             ModelMap modelMap) {
		if (new RedisUtil().hasKey(token)) {
			modelMap.addAttribute("success", "true");
			modelMap.addAttribute("code", 200);
			modelMap.addAttribute("message", "用户已登录");
		} else {
			modelMap.addAttribute("success", "true");
			modelMap.addAttribute("code", 200);
			modelMap.addAttribute("message", "用户未登录");
		}
		return "enrol/result";
	}

	/**
	 * 退出登录
	 * 
	 * @param request
	 * @param response
	 * @param modelMap
	 * @return
	 */
	@RequestMapping(value = "/offLogin", method = RequestMethod.POST)
	public String offLogin(@RequestParam String token,
                           HttpServletRequest request, HttpServletResponse response,
                           ModelMap modelMap) {
		if (new RedisUtil().hasKey(token)) {
			new RedisUtil().del(token);
			modelMap.addAttribute("success", "true");
			modelMap.addAttribute("code", 200);
			modelMap.addAttribute("message", "退出登录成功！");
		} else {
			modelMap.addAttribute("success", "false");
			modelMap.addAttribute("code", 200);
			modelMap.addAttribute("message", "用户未登录！");
		}
		return "enrol/result";
	}

	/**
	 * 密码修改
	 * 
	 * @param oldPassword
	 * @param newPassword
	 * @param request
	 * @param response
	 * @param modelMap
	 * @return
	 */
	@RequestMapping(value = "/modifyPassword", method = RequestMethod.POST)
	public String modifyPassword(@RequestParam String oldPassword,
                                 @RequestParam String newPassword, HttpServletRequest request,
                                 HttpServletResponse response, ModelMap modelMap) {
		String token = request.getHeader("token");
		String mobile = String.valueOf(new RedisUtil().get(token));
		if (null == mobile) {
			modelMap.addAttribute("success", "false");
			modelMap.addAttribute("code", 401);
			modelMap.addAttribute("message", "用户未登录");
			return "enrol/result";
		}
		int status = studentService.checkPassword(mobile, oldPassword);
		if (status != 2) {
			modelMap.addAttribute("success", "false");
			modelMap.addAttribute("code", 200);
			modelMap.addAttribute("message", "原密码不正确");
			return "enrol/result";
		}
		int rel = studentService.modifyPassword(mobile, newPassword);
		if (rel != 0) {
			modelMap.addAttribute("success", "true");
			modelMap.addAttribute("code", 200);
			modelMap.addAttribute("message", "密码已修改");
		}
		return "enrol/result";
	}
}
