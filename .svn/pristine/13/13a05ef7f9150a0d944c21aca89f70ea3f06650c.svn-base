package com.cz.enrol.controller;

import java.util.List;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.cz.enrol.common.BaseBody;
import com.cz.enrol.common.ReturnStatus;
import com.cz.enrol.entity.Invoice;
import com.cz.enrol.service.InvoiceService;

/**
 * 
 * 发票表 访问控制器类
 * 
 **/
@RestController
@RequestMapping("/invoiceController")
public class InvoiceController {

	// 统一记录日志类
	private Logger Log = LoggerFactory.getLogger("enrol");
	@Autowired
	// 当前业务操作接口bo
	private InvoiceService invoiceService;

	/**
	 * 查询发票信息
	 * 
	 * @param request
	 * @param response
	 * @param modelMap
	 * @return
	 */
	@RequestMapping(value = "/getInvoiceInfo", method = RequestMethod.GET)
	public BaseBody<Invoice> getInvoiceInfo(@RequestParam Long id) {
		BaseBody<Invoice> baseBody = new BaseBody<Invoice>();

		Invoice invoiceInfo = invoiceService.selectByPrimaryKey(id);
		if (null != invoiceInfo) {
			baseBody.setSuccess(ReturnStatus.SUCCESS);
			baseBody.setCode(200);
			baseBody.setData(invoiceInfo);
			baseBody.setMessage("查询成功");
		} else {
			baseBody.setSuccess(ReturnStatus.FAILD);
			baseBody.setCode(500);
			baseBody.setMessage("查询无记录");
		}
		return baseBody;
	}

	/**
	 * 查询发票列表
	 * 
	 * @param request
	 * @param response
	 * @param modelMap
	 * @return
	 */
	@RequestMapping(value = "/getInvoiceList", method = RequestMethod.GET)
	public BaseBody<List> getInvoiceList(@RequestParam Long orderNo) {
		BaseBody<List> baseBody = new BaseBody<List>();

		List<Invoice> invoiceList = invoiceService
				.queryInvoiceByOrderNo(orderNo);
		if (null != invoiceList && invoiceList.size() > 0) {
			baseBody.setSuccess(ReturnStatus.SUCCESS);
			baseBody.setCode(200);
			baseBody.setData(invoiceList);
			baseBody.setMessage("查询成功");
		} else {
			baseBody.setSuccess(ReturnStatus.FAILD);
			baseBody.setCode(500);
			baseBody.setMessage("查询无记录");
		}
		return baseBody;
	}
}
