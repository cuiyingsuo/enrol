package com.cz.enrol.configure;

import com.cz.enrol.interceptor.LoginInterceptorForManager;
import com.cz.enrol.interceptor.LoginInterceptorForStudent;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.web.servlet.HandlerInterceptor;
import org.springframework.web.servlet.config.annotation.InterceptorRegistry;
import org.springframework.web.servlet.config.annotation.WebMvcConfigurerAdapter;

/**
 * @Author liuzhongshuai
 * Created by liuzhongshuai on 2017/10/20.
 */
@Configuration
public class InterceptorConfigure extends WebMvcConfigurerAdapter {


    @Value("${server.context-path}")
    private String contextPath;

    /**
     * 前端登录验证
     *
     * @return
     */
    @Bean
    public HandlerInterceptor studentLoginInterceptor() {
        return new LoginInterceptorForStudent();
    }

    /**
     * 后端登录验证
     *
     * @return
     */
    @Bean
    public HandlerInterceptor managerLoginInterceptor() {
        return new LoginInterceptorForManager();
    }

    @Override
    public void addInterceptors(InterceptorRegistry registry) {
        // 前台登录验证
        registry.addInterceptor(studentLoginInterceptor()).addPathPatterns("/**/orderController/**");
        registry.addInterceptor(studentLoginInterceptor()).addPathPatterns("/**/myInfoController/**");
        registry.addInterceptor(studentLoginInterceptor()).addPathPatterns("/**/payController/**");
        registry.addInterceptor(studentLoginInterceptor()).addPathPatterns("/**/invoiceController/**");
        registry.addInterceptor(studentLoginInterceptor()).addPathPatterns("/**/contractController/**");
        //后台登录验证
        registry.addInterceptor(managerLoginInterceptor()).addPathPatterns("/**/managenment/**")
                .excludePathPatterns("/**/managenment/user/userLogin")
                .excludePathPatterns("/**/managenment/user/validateCodeRef");

        super.addInterceptors(registry);
    }


}
