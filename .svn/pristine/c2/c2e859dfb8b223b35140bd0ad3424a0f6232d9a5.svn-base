package com.cz.enrol.controller.management;

import com.cz.enrol.common.BaseBody;
import com.cz.enrol.common.BasePage;
import com.cz.enrol.common.ManageBaseBody;
import com.cz.enrol.common.ReturnStatus;
import com.cz.enrol.dao.student.ClassStudentMapper;
import com.cz.enrol.entity.ClassStudent;
import com.cz.enrol.entity.Student;
import com.cz.enrol.service.StudentService;
import com.cz.enrol.utils.MD5Util;
import com.cz.enrol.vo.StudentQueryEx;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.*;

import javax.validation.Valid;
import java.util.List;
import java.util.Map;

/**
 * Created by liuzhongshuai on 2017/11/6.
 */
@RestController
@RequestMapping("/managenment/beschool")
public class ManagerBeStartSchoolController {


    @Autowired
    private StudentService studentService;

    @Autowired
    private ClassStudentMapper classStudentMapper;

    @Value("{enrol.user.login.key}")
    private String key;

    /**
     * 待入学管理：查询
     *
     * @param studentQueryEx
     * @return
     */
    @GetMapping("/queryBeSchoolStus")
    public ManageBaseBody<Student> queryBeSchoolStus(@Valid StudentQueryEx studentQueryEx, BindingResult bindingResult) {

        ManageBaseBody<Student> baseBody = new ManageBaseBody<>();
        if (bindingResult.hasErrors()) {
            baseBody.setSuccess(ReturnStatus.FAILD);
            baseBody.setCode(1006);
            baseBody.setMsg(bindingResult.getFieldError().getDefaultMessage());
            return baseBody;
        }
        BasePage<Student> basePage = studentService.queryBeStartSchoolStus(studentQueryEx);

        baseBody.setCode(0);
        baseBody.setCount(basePage.getCount());
        baseBody.setData(basePage.getPageData());
        return baseBody;
    }


    /**
     * 重置学生密码
     *
     * @param id
     * @return
     */
    @PutMapping("/resetPass")
    public BaseBody resetPass(Long id) {

        BaseBody baseBody = new BaseBody();
        if (null == id) {
            baseBody.setSuccess(ReturnStatus.FAILD);
            baseBody.setMessage("参数不能为null");
            return baseBody;
        }
        //查询学生
        Student student = studentService.selectByPrimaryKey(id);
        if (null == student) {
            baseBody.setSuccess(ReturnStatus.FAILD);
            baseBody.setMessage("查询不到该学员信息!");
            return baseBody;
        }
        //重置密码
        String initPass = "123456";
        String md5Str = MD5Util.encryption(student.getMobile() + initPass + key).trim();

        student.setPassword(md5Str);

        studentService.updateByPk(student);

        baseBody.setMessage("重置密码成功!");
        return baseBody;
    }

    /**
     * 查询待入学学生对应的班级信息
     *
     * @return
     */
    @GetMapping("/getBeSchoolForClass")
    public BaseBody<List<Map>> getBeSchoolForClass(Long studentId) {
        BaseBody<List<Map>> baseBody = new BaseBody();

        if (null == studentId) {
            baseBody.setSuccess(ReturnStatus.FAILD);
            baseBody.setMessage("参数不能为null");
            return baseBody;
        }
        List<Map> mapList = classStudentMapper.getBeSchoolForClass(studentId);
        baseBody.setContent(mapList);
        return baseBody;
    }

    /**
     * 录取学生
     *
     * @param studentId
     * @param classId
     * @return
     */
    @PostMapping("/acceptStu")
    public BaseBody acceptStu(Long studentId, Long classId) {

        BaseBody baseBody = new BaseBody();

        if (null == studentId || null == classId) {
            baseBody.setSuccess(ReturnStatus.FAILD);
            baseBody.setMessage("参数不能为null!");
            return baseBody;
        }
        ClassStudent classStudent = new ClassStudent();
        classStudent.setClassId(classId);
        classStudent.setStudentId(studentId);

        ClassStudent classStudentResult = classStudentMapper.selectOne(classStudent);

        if (null == classStudentResult) {
            baseBody.setSuccess(ReturnStatus.FAILD);
            baseBody.setMessage("查询不到学生对应的班级信息!");
            return baseBody;
        }

        if (3 == classStudentResult.getStatus().intValue()) {
            baseBody.setMessage("录取成成功!");
            return baseBody;
        }
        classStudentResult.setStatus(3);
        classStudentMapper.updateByPrimaryKey(classStudentResult);

        baseBody.setMessage("录取成成功!");
        return baseBody;
    }


}
